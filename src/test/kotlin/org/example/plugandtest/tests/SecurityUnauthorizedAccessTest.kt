package org.example.plugandtest.tests

import io.qameta.allure.Description
import org.testng.annotations.Test
import org.testng.Assert.assertEquals
import java.net.HttpURLConnection
import java.net.URL

/**
 * üìå Type de test : Test de s√©curit√© (Acc√®s non autoris√©)
 *
 * üéØ Objectif :
 * - V√©rifier que l'acc√®s aux endpoints de l'API est correctement restreint aux utilisateurs authentifi√©s.
 * - Tester que les requ√™tes non authentifi√©es retournent une erreur HTTP 401.
 *
 * ‚úÖ Succ√®s :
 * - Toute tentative d'acc√®s non authentifi√© doit √™tre bloqu√©e avec un HTTP 401 (Unauthorized).
 * - Aucune donn√©e ne doit √™tre expos√©e sans authentification valide.
 */

class SecurityUnauthorizedAccessTest {

    private val apiUrl = "http://localhost:8082/api/products"

    @Test
    @Description("V√©rifier que l'acc√®s non authentifi√© est interdit")
    fun `test unauthorized access`() {
        val responseCode = sendRequestWithoutAuth()
        assertEquals(responseCode, 401, "‚ö†Ô∏è L‚ÄôAPI laisse acc√©der aux donn√©es sans authentification !")
    }

    private fun sendRequestWithoutAuth(): Int {
        val url = URL(apiUrl)
        val connection = url.openConnection() as HttpURLConnection
        connection.requestMethod = "GET"
        connection.setRequestProperty("Accept", "application/json")

        return connection.responseCode
    }
}
